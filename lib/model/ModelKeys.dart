class ModelKeys {
  var tenantId;
  var createEmpId;
  var createEmpName;
  var createDeptId;
  var createDeptName;
  var instanceId;
  var parentId;
  var flowId;
  var modelRefTable;
  var businessKey;
  var stageId;
  var projId;
  var planStartTime;
  var planEndTime;
  var stateDesc;
  var nodeId;
  var checkState;
  var remark;
  var completeDate;
  var flowModelNode;
  var realName;
  var taskName;
  var projName;
  var projNo;
  var bizData;
  var task;
  int state;
  num createDate;
  FlowModelBean flowModel;
  List<TasksListBean> tasks;

  ModelKeys({this.tenantId, this.createEmpId, this.createEmpName, this.createDeptId, this.createDeptName, this.instanceId, this.parentId, this.flowId, this.modelRefTable, this.businessKey, this.stageId, this.projId, this.planStartTime, this.planEndTime, this.stateDesc, this.nodeId, this.checkState, this.remark, this.completeDate, this.flowModelNode, this.realName, this.taskName, this.projName, this.projNo, this.bizData, this.task, this.state, this.createDate, this.flowModel, this.tasks});

  ModelKeys.fromJson(Map<String, dynamic> json) {    
    this.tenantId = json['tenantId'];
    this.createEmpId = json['createEmpId'];
    this.createEmpName = json['createEmpName'];
    this.createDeptId = json['createDeptId'];
    this.createDeptName = json['createDeptName'];
    this.instanceId = json['instanceId'];
    this.parentId = json['parentId'];
    this.flowId = json['flowId'];
    this.modelRefTable = json['modelRefTable'];
    this.businessKey = json['businessKey'];
    this.stageId = json['stageId'];
    this.projId = json['projId'];
    this.planStartTime = json['planStartTime'];
    this.planEndTime = json['planEndTime'];
    this.stateDesc = json['stateDesc'];
    this.nodeId = json['nodeId'];
    this.checkState = json['checkState'];
    this.remark = json['remark'];
    this.completeDate = json['completeDate'];
    this.flowModelNode = json['flowModelNode'];
    this.realName = json['realName'];
    this.taskName = json['taskName'];
    this.projName = json['projName'];
    this.projNo = json['projNo'];
    this.bizData = json['bizData'];
    this.task = json['task'];
    this.state = json['state'];
    this.createDate = json['createDate'];
    this.flowModel = json['flowModel'] != null ? FlowModelBean.fromJson(json['flowModel']) : null;
    this.tasks = (json['tasks'] as List)!=null?(json['tasks'] as List).map((i) => TasksListBean.fromJson(i)).toList():null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['tenantId'] = this.tenantId;
    data['createEmpId'] = this.createEmpId;
    data['createEmpName'] = this.createEmpName;
    data['createDeptId'] = this.createDeptId;
    data['createDeptName'] = this.createDeptName;
    data['instanceId'] = this.instanceId;
    data['parentId'] = this.parentId;
    data['flowId'] = this.flowId;
    data['modelRefTable'] = this.modelRefTable;
    data['businessKey'] = this.businessKey;
    data['stageId'] = this.stageId;
    data['projId'] = this.projId;
    data['planStartTime'] = this.planStartTime;
    data['planEndTime'] = this.planEndTime;
    data['stateDesc'] = this.stateDesc;
    data['nodeId'] = this.nodeId;
    data['checkState'] = this.checkState;
    data['remark'] = this.remark;
    data['completeDate'] = this.completeDate;
    data['flowModelNode'] = this.flowModelNode;
    data['realName'] = this.realName;
    data['taskName'] = this.taskName;
    data['projName'] = this.projName;
    data['projNo'] = this.projNo;
    data['bizData'] = this.bizData;
    data['task'] = this.task;
    data['state'] = this.state;
    data['createDate'] = this.createDate;
    if (this.flowModel != null) {
      data['flowModel'] = this.flowModel.toJson();
    }
    data['tasks'] = this.tasks != null?this.tasks.map((i) => i.toJson()).toList():null;
    return data;
  }

}

class FlowModelBean {
  String tenantId;
  String createEmpId;
  String createEmpName;
  String createDeptId;
  String createDeptName;
  String modifyDate;
  String modifyEmpId;
  String modifyEmpName;
  String deleteDate;
  String deleteEmpId;
  String deleteEmpName;
  String modelId;
  String modelRefTable;
  String modelName;
  String modelNumber;
  String modelVersion;
  String modelType;
  String modeModular;
  String modelSign;
  String modelSendFormat;
  String modelUrl;
  String modelHandleWith;
  String modelHandleHeight;
  String modelListUrl;
  String modelFinishSendIds;
  String modelFinishControls;
  String modelFinishEnableEditRole;
  String modelRole;
  String modelByte;
  String professionType;
  String levelTypeId;
  String levelTypeCode;
  String professionTypeCode;
  bool deleteMark;
  bool modelsWord;
  bool modelsRun;
  bool modelAssociate;
  bool modelFinishEnableDismiss;
  int modelNum;
  int type;
  int version;
  num createDate;
  List<ModelNodesListBean> modelNodes;

  FlowModelBean({this.tenantId, this.createEmpId, this.createEmpName, this.createDeptId, this.createDeptName, this.modifyDate, this.modifyEmpId, this.modifyEmpName, this.deleteDate, this.deleteEmpId, this.deleteEmpName, this.modelId, this.modelRefTable, this.modelName, this.modelNumber, this.modelVersion, this.modelType, this.modeModular, this.modelSign, this.modelSendFormat, this.modelUrl, this.modelHandleWith, this.modelHandleHeight, this.modelListUrl, this.modelFinishSendIds, this.modelFinishControls, this.modelFinishEnableEditRole, this.modelRole, this.modelByte, this.professionType, this.levelTypeId, this.levelTypeCode, this.professionTypeCode, this.deleteMark, this.modelsWord, this.modelsRun, this.modelAssociate, this.modelFinishEnableDismiss, this.modelNum, this.type, this.version, this.createDate, this.modelNodes});

  FlowModelBean.fromJson(Map<String, dynamic> json) {    
    this.tenantId = json['tenantId'];
    this.createEmpId = json['createEmpId'];
    this.createEmpName = json['createEmpName'];
    this.createDeptId = json['createDeptId'];
    this.createDeptName = json['createDeptName'];
    this.modifyDate = json['modifyDate'];
    this.modifyEmpId = json['modifyEmpId'];
    this.modifyEmpName = json['modifyEmpName'];
    this.deleteDate = json['deleteDate'];
    this.deleteEmpId = json['deleteEmpId'];
    this.deleteEmpName = json['deleteEmpName'];
    this.modelId = json['modelId'];
    this.modelRefTable = json['modelRefTable'];
    this.modelName = json['modelName'];
    this.modelNumber = json['modelNumber'];
    this.modelVersion = json['modelVersion'];
    this.modelType = json['modelType'];
    this.modeModular = json['modeModular'];
    this.modelSign = json['modelSign'];
    this.modelSendFormat = json['modelSendFormat'];
    this.modelUrl = json['modelUrl'];
    this.modelHandleWith = json['modelHandleWith'];
    this.modelHandleHeight = json['modelHandleHeight'];
    this.modelListUrl = json['modelListUrl'];
    this.modelFinishSendIds = json['modelFinishSendIds'];
    this.modelFinishControls = json['modelFinishControls'];
    this.modelFinishEnableEditRole = json['modelFinishEnableEditRole'];
    this.modelRole = json['modelRole'];
    this.modelByte = json['modelByte'];
    this.professionType = json['professionType'];
    this.levelTypeId = json['levelTypeId'];
    this.levelTypeCode = json['levelTypeCode'];
    this.professionTypeCode = json['professionTypeCode'];
    this.deleteMark = json['deleteMark'];
    this.modelsWord = json['modelsWord'];
    this.modelsRun = json['modelsRun'];
    this.modelAssociate = json['modelAssociate'];
    this.modelFinishEnableDismiss = json['modelFinishEnableDismiss'];
    this.modelNum = json['modelNum'];
    this.type = json['type'];
    this.version = json['version'];
    this.createDate = json['createDate'];
    this.modelNodes = (json['modelNodes'] as List)!=null?(json['modelNodes'] as List).map((i) => ModelNodesListBean.fromJson(i)).toList():null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['tenantId'] = this.tenantId;
    data['createEmpId'] = this.createEmpId;
    data['createEmpName'] = this.createEmpName;
    data['createDeptId'] = this.createDeptId;
    data['createDeptName'] = this.createDeptName;
    data['modifyDate'] = this.modifyDate;
    data['modifyEmpId'] = this.modifyEmpId;
    data['modifyEmpName'] = this.modifyEmpName;
    data['deleteDate'] = this.deleteDate;
    data['deleteEmpId'] = this.deleteEmpId;
    data['deleteEmpName'] = this.deleteEmpName;
    data['modelId'] = this.modelId;
    data['modelRefTable'] = this.modelRefTable;
    data['modelName'] = this.modelName;
    data['modelNumber'] = this.modelNumber;
    data['modelVersion'] = this.modelVersion;
    data['modelType'] = this.modelType;
    data['modeModular'] = this.modeModular;
    data['modelSign'] = this.modelSign;
    data['modelSendFormat'] = this.modelSendFormat;
    data['modelUrl'] = this.modelUrl;
    data['modelHandleWith'] = this.modelHandleWith;
    data['modelHandleHeight'] = this.modelHandleHeight;
    data['modelListUrl'] = this.modelListUrl;
    data['modelFinishSendIds'] = this.modelFinishSendIds;
    data['modelFinishControls'] = this.modelFinishControls;
    data['modelFinishEnableEditRole'] = this.modelFinishEnableEditRole;
    data['modelRole'] = this.modelRole;
    data['modelByte'] = this.modelByte;
    data['professionType'] = this.professionType;
    data['levelTypeId'] = this.levelTypeId;
    data['levelTypeCode'] = this.levelTypeCode;
    data['professionTypeCode'] = this.professionTypeCode;
    data['deleteMark'] = this.deleteMark;
    data['modelsWord'] = this.modelsWord;
    data['modelsRun'] = this.modelsRun;
    data['modelAssociate'] = this.modelAssociate;
    data['modelFinishEnableDismiss'] = this.modelFinishEnableDismiss;
    data['modelNum'] = this.modelNum;
    data['type'] = this.type;
    data['version'] = this.version;
    data['createDate'] = this.createDate;
    data['modelNodes'] = this.modelNodes != null?this.modelNodes.map((i) => i.toJson()).toList():null;
    return data;
  }
}

class TasksListBean {
  String tenantId;
  String createEmpId;
  String createEmpName;
  String createDeptId;
  String createDeptName;
  String taskId;
  String preTaskId;
  String parentId;
  String taskName;
  String instanceId;
  String flowId;
  String nodeType;
  String nodeId;
  String ownnerId;
  String executorId;
  String executorName;
  String executorDeptId;
  String remark;
  String formData;
  String businessKey;
  String stageId;
  String projId;
  String planStartTime;
  String planEndTime;
  String node;
  String agentUserId;
  String agentUserName;
  String status;
  String idea;
  String breadcrumbs;
  String stageStatus;
  String stateDesc;
  int state;
  num createDate;

  TasksListBean({this.tenantId, this.createEmpId, this.createEmpName, this.createDeptId, this.createDeptName, this.taskId, this.preTaskId, this.parentId, this.taskName, this.instanceId, this.flowId, this.nodeType, this.nodeId, this.ownnerId, this.executorId, this.executorName, this.executorDeptId, this.remark, this.formData,   this.businessKey, this.stageId, this.projId, this.planStartTime, this.planEndTime, this.node, this.agentUserId, this.agentUserName, this.status, this.idea, this.breadcrumbs, this.stageStatus, this.stateDesc, this.state, this.createDate});

  TasksListBean.fromJson(Map<String, dynamic> json) {    
    this.tenantId = json['tenantId'];
    this.createEmpId = json['createEmpId'];
    this.createEmpName = json['createEmpName'];
    this.createDeptId = json['createDeptId'];
    this.createDeptName = json['createDeptName'];
    this.taskId = json['taskId'];
    this.preTaskId = json['preTaskId'];
    this.parentId = json['parentId'];
    this.taskName = json['taskName'];
    this.instanceId = json['instanceId'];
    this.flowId = json['flowId'];
    this.nodeType = json['nodeType'];
    this.nodeId = json['nodeId'];
    this.ownnerId = json['ownnerId'];
    this.executorId = json['executorId'];
    this.executorName = json['executorName'];
    this.executorDeptId = json['executorDeptId'];
    this.remark = json['remark'];
    this.formData = json['formData'];
    this.businessKey = json['businessKey'];
    this.stageId = json['stageId'];
    this.projId = json['projId'];
    this.planStartTime = json['planStartTime'];
    this.planEndTime = json['planEndTime'];
    this.node = json['node'];
    this.agentUserId = json['agentUserId'];
    this.agentUserName = json['agentUserName'];
    this.status = json['status'];
    this.idea = json['idea'];
    this.breadcrumbs = json['breadcrumbs'];
    this.stageStatus = json['stageStatus'];
    this.stateDesc = json['stateDesc'];
    this.state = json['state'];
    this.createDate = json['createDate'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['tenantId'] = this.tenantId;
    data['createEmpId'] = this.createEmpId;
    data['createEmpName'] = this.createEmpName;
    data['createDeptId'] = this.createDeptId;
    data['createDeptName'] = this.createDeptName;
    data['taskId'] = this.taskId;
    data['preTaskId'] = this.preTaskId;
    data['parentId'] = this.parentId;
    data['taskName'] = this.taskName;
    data['instanceId'] = this.instanceId;
    data['flowId'] = this.flowId;
    data['nodeType'] = this.nodeType;
    data['nodeId'] = this.nodeId;
    data['ownnerId'] = this.ownnerId;
    data['executorId'] = this.executorId;
    data['executorName'] = this.executorName;
    data['executorDeptId'] = this.executorDeptId;
    data['remark'] = this.remark;
    data['formData'] = this.formData;
    data['businessKey'] = this.businessKey;
    data['stageId'] = this.stageId;
    data['projId'] = this.projId;
    data['planStartTime'] = this.planStartTime;
    data['planEndTime'] = this.planEndTime;
    data['node'] = this.node;
    data['agentUserId'] = this.agentUserId;
    data['agentUserName'] = this.agentUserName;
    data['status'] = this.status;
    data['idea'] = this.idea;
    data['breadcrumbs'] = this.breadcrumbs;
    data['stageStatus'] = this.stageStatus;
    data['stateDesc'] = this.stateDesc;
    data['state'] = this.state;
    data['createDate'] = this.createDate;
    return data;
  }
}

class ModelNodesListBean {
  String tenantId;
  String createEmpId;
  String createEmpName;
  String createDeptId;
  String createDeptName;
  String modifyDate;
  String modifyEmpId;
  String modifyEmpName;
  String deleteDate;
  String deleteEmpId;
  String deleteEmpName;
  String nodeId;
  String nodeModelId;
  String nodeName;
  String nodeCategoryId;
  String nodeCategory;
  String nodeBackId;
  String nodeJumpId;
  String nodeRoles;
  String nodeQualifiedEmps;
  String nodeHasSameEmp;
  String nodeCanEditElement;
  String nodeSignElement;
  String nodeUrl;
  String nodeHandleWidth;
  String nodeHandleHeight;
  String nodeDefaultApproveAdvice;
  String nodeDefaultRejectAdvice;
  String nodeType;
  String nodePersonType;
  String designee;
  String typePerson;
  String nodePersonId;
  String nodeList;
  String jumpNodes;
  String backNodes;
  String nextNodes;
  String flowTask;
  bool deleteMark;
  bool nodeCanDirectEnd;
  bool nodeCanDirectVeto;
  bool nodeCanBack;
  bool nodeCanJump;
  bool nodeDisplayDeptEmps;
  bool nodeDeptManager;
  bool nodeFinishMessage;
  bool nodeSignatureListShow;
  bool nodeApproveAdviceRequired;
  bool nodeLastAdviceShow;
  bool nodeAutoFinished;
  bool nodeFinishResubmit;
  bool nodeRuntimeAutoSubmit;
  int orderr;
  int nodeApproveDays;
  num createDate;

  ModelNodesListBean({this.tenantId, this.createEmpId, this.createEmpName, this.createDeptId, this.createDeptName, this.modifyDate, this.modifyEmpId, this.modifyEmpName, this.deleteDate, this.deleteEmpId, this.deleteEmpName, this.nodeId, this.nodeModelId, this.nodeName, this.nodeCategoryId, this.nodeCategory, this.nodeBackId, this.nodeJumpId, this.nodeRoles, this.nodeQualifiedEmps, this.nodeHasSameEmp, this.nodeCanEditElement, this.nodeSignElement, this.nodeUrl, this.nodeHandleWidth, this.nodeHandleHeight, this.nodeDefaultApproveAdvice, this.nodeDefaultRejectAdvice, this.nodeType, this.nodePersonType, this.designee, this.typePerson, this.nodePersonId, this.nodeList, this.jumpNodes, this.backNodes, this.nextNodes, this.flowTask, this.deleteMark, this.nodeCanDirectEnd, this.nodeCanDirectVeto, this.nodeCanBack, this.nodeCanJump, this.nodeDisplayDeptEmps, this.nodeDeptManager, this.nodeFinishMessage, this.nodeSignatureListShow, this.nodeApproveAdviceRequired, this.nodeLastAdviceShow, this.nodeAutoFinished, this.nodeFinishResubmit, this.nodeRuntimeAutoSubmit, this.orderr, this.nodeApproveDays, this.createDate});

  ModelNodesListBean.fromJson(Map<String, dynamic> json) {    
    this.tenantId = json['tenantId'];
    this.createEmpId = json['createEmpId'];
    this.createEmpName = json['createEmpName'];
    this.createDeptId = json['createDeptId'];
    this.createDeptName = json['createDeptName'];
    this.modifyDate = json['modifyDate'];
    this.modifyEmpId = json['modifyEmpId'];
    this.modifyEmpName = json['modifyEmpName'];
    this.deleteDate = json['deleteDate'];
    this.deleteEmpId = json['deleteEmpId'];
    this.deleteEmpName = json['deleteEmpName'];
    this.nodeId = json['nodeId'];
    this.nodeModelId = json['nodeModelId'];
    this.nodeName = json['nodeName'];
    this.nodeCategoryId = json['nodeCategoryId'];
    this.nodeCategory = json['nodeCategory'];
    this.nodeBackId = json['nodeBackId'];
    this.nodeJumpId = json['nodeJumpId'];
    this.nodeRoles = json['nodeRoles'];
    this.nodeQualifiedEmps = json['nodeQualifiedEmps'];
    this.nodeHasSameEmp = json['nodeHasSameEmp'];
    this.nodeCanEditElement = json['nodeCanEditElement'];
    this.nodeSignElement = json['nodeSignElement'];
    this.nodeUrl = json['nodeUrl'];
    this.nodeHandleWidth = json['nodeHandleWidth'];
    this.nodeHandleHeight = json['nodeHandleHeight'];
    this.nodeDefaultApproveAdvice = json['nodeDefaultApproveAdvice'];
    this.nodeDefaultRejectAdvice = json['nodeDefaultRejectAdvice'];
    this.nodeType = json['nodeType'];
    this.nodePersonType = json['nodePersonType'];
    this.designee = json['designee'];
    this.typePerson = json['typePerson'];
    this.nodePersonId = json['nodePersonId'];
    this.nodeList = json['nodeList'];
    this.jumpNodes = json['jumpNodes'];
    this.backNodes = json['backNodes'];
    this.nextNodes = json['nextNodes'];
    this.flowTask = json['flowTask'];
    this.deleteMark = json['deleteMark'];
    this.nodeCanDirectEnd = json['nodeCanDirectEnd'];
    this.nodeCanDirectVeto = json['nodeCanDirectVeto'];
    this.nodeCanBack = json['nodeCanBack'];
    this.nodeCanJump = json['nodeCanJump'];
    this.nodeDisplayDeptEmps = json['nodeDisplayDeptEmps'];
    this.nodeDeptManager = json['nodeDeptManager'];
    this.nodeFinishMessage = json['nodeFinishMessage'];
    this.nodeSignatureListShow = json['nodeSignatureListShow'];
    this.nodeApproveAdviceRequired = json['nodeApproveAdviceRequired'];
    this.nodeLastAdviceShow = json['nodeLastAdviceShow'];
    this.nodeAutoFinished = json['nodeAutoFinished'];
    this.nodeFinishResubmit = json['nodeFinishResubmit'];
    this.nodeRuntimeAutoSubmit = json['nodeRuntimeAutoSubmit'];
    this.orderr = json['orderr'];
    this.nodeApproveDays = json['nodeApproveDays'];
    this.createDate = json['createDate'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['tenantId'] = this.tenantId;
    data['createEmpId'] = this.createEmpId;
    data['createEmpName'] = this.createEmpName;
    data['createDeptId'] = this.createDeptId;
    data['createDeptName'] = this.createDeptName;
    data['modifyDate'] = this.modifyDate;
    data['modifyEmpId'] = this.modifyEmpId;
    data['modifyEmpName'] = this.modifyEmpName;
    data['deleteDate'] = this.deleteDate;
    data['deleteEmpId'] = this.deleteEmpId;
    data['deleteEmpName'] = this.deleteEmpName;
    data['nodeId'] = this.nodeId;
    data['nodeModelId'] = this.nodeModelId;
    data['nodeName'] = this.nodeName;
    data['nodeCategoryId'] = this.nodeCategoryId;
    data['nodeCategory'] = this.nodeCategory;
    data['nodeBackId'] = this.nodeBackId;
    data['nodeJumpId'] = this.nodeJumpId;
    data['nodeRoles'] = this.nodeRoles;
    data['nodeQualifiedEmps'] = this.nodeQualifiedEmps;
    data['nodeHasSameEmp'] = this.nodeHasSameEmp;
    data['nodeCanEditElement'] = this.nodeCanEditElement;
    data['nodeSignElement'] = this.nodeSignElement;
    data['nodeUrl'] = this.nodeUrl;
    data['nodeHandleWidth'] = this.nodeHandleWidth;
    data['nodeHandleHeight'] = this.nodeHandleHeight;
    data['nodeDefaultApproveAdvice'] = this.nodeDefaultApproveAdvice;
    data['nodeDefaultRejectAdvice'] = this.nodeDefaultRejectAdvice;
    data['nodeType'] = this.nodeType;
    data['nodePersonType'] = this.nodePersonType;
    data['designee'] = this.designee;
    data['typePerson'] = this.typePerson;
    data['nodePersonId'] = this.nodePersonId;
    data['nodeList'] = this.nodeList;
    data['jumpNodes'] = this.jumpNodes;
    data['backNodes'] = this.backNodes;
    data['nextNodes'] = this.nextNodes;
    data['flowTask'] = this.flowTask;
    data['deleteMark'] = this.deleteMark;
    data['nodeCanDirectEnd'] = this.nodeCanDirectEnd;
    data['nodeCanDirectVeto'] = this.nodeCanDirectVeto;
    data['nodeCanBack'] = this.nodeCanBack;
    data['nodeCanJump'] = this.nodeCanJump;
    data['nodeDisplayDeptEmps'] = this.nodeDisplayDeptEmps;
    data['nodeDeptManager'] = this.nodeDeptManager;
    data['nodeFinishMessage'] = this.nodeFinishMessage;
    data['nodeSignatureListShow'] = this.nodeSignatureListShow;
    data['nodeApproveAdviceRequired'] = this.nodeApproveAdviceRequired;
    data['nodeLastAdviceShow'] = this.nodeLastAdviceShow;
    data['nodeAutoFinished'] = this.nodeAutoFinished;
    data['nodeFinishResubmit'] = this.nodeFinishResubmit;
    data['nodeRuntimeAutoSubmit'] = this.nodeRuntimeAutoSubmit;
    data['orderr'] = this.orderr;
    data['nodeApproveDays'] = this.nodeApproveDays;
    data['createDate'] = this.createDate;
    return data;
  }
}
